// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/users/login": {
            "post": {
                "description": "Authenticate user, set session cookie and return JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "login": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: string, data: {token: string}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "error: message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "error: message",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/users/logout": {
            "post": {
                "description": "Clear session cookie and remove JWT from Redis",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "message: string",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "error: message",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/users/profile": {
            "get": {
                "description": "Get profile of the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.User"
                        }
                    },
                    "401": {
                        "description": "error: message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "error: message",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update profile of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: string",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "error: message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "error: message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "error: message",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/users/register": {
            "post": {
                "description": "Register a new user with login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ds.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "data: registered user",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "error: message",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "error: message",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ds.User": {
            "type": "object",
            "properties": {
                "cargoWeight": {
                    "type": "number"
                },
                "contacts": {
                    "type": "string"
                },
                "containers20ftCount": {
                    "type": "integer"
                },
                "containers40ftCount": {
                    "type": "integer"
                },
                "fio": {
                    "type": "string"
                },
                "isModerator": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
